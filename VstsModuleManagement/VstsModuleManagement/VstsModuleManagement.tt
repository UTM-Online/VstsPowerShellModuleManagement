<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System" #>
<#@ output extension=".psd1" #>
<#

#>
#
# Module manifest for module 'VstsModuleManagement'
#
# Generated by: Josh Irwin
#
# Generated on: <#= DateTime.Now #>
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'VstsModuleManagementCore.dll'

# Version number of this module.
ModuleVersion = <#= this.BuildNumber #>

# ID used to uniquely identify this module
GUID = '1f36ecb4-282f-4b1c-b81d-e1433524bccc'

# Author of this module
Author = 'Josh Irwin'

# Company or vendor of this module
CompanyName = ''

# Copyright statement for this module
Copyright = '(c) 2018 Josh Irwin. All rights reserved.'

# Description of the functionality provided by this module
Description = 'A module to act as a proxy to the package management system for interacting with VSTS as a package source.'

# Minimum version of the Windows PowerShell engine required by this module
# PowerShellVersion = ''

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
RequiredAssemblies = @("Newtonsoft.Json.dll")

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
 ScriptsToProcess = @(".\VstsModuleManagement.StartUp.ps1")

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module
# FunctionsToExport =

# Cmdlets to export from this module
# CmdletsToExport = @("Get-VstsCredential","Join-VstsPackageSourceWithCredential","Save-VstsCredential","Find-VstsModule","Add-VstsPackageSource","Get-VstsPackageSources","Remove-VstsPackageSource","Remove-VstsCredential","Remove-VstsCredential","Install-VstsModule","Uninstall-VstsModule")

# Variables to export from this module
#VariablesToExport = '*'

# Aliases to export from this module
#AliasesToExport = '*'

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
FileList = @("Newtonsoft.Json.dll","VstsModuleManagement.StartUp.ps1","VstsModuleManagementCore.dll")

# Private data to pass to the module specified in RootModule/ModuleToProcess
PrivateData = @{
        PSData = @{
            # Tags applied to this module. These help with module discovery in online galleries.
            Tags = @('PSModule','PowerShellGet','VSTS')
            # A URL to the license for this module.
            LicenseUri = 'https://github.com/UTM-Online/VstsPowerShellModuleManagement/blob/master/LICENSE'
            # A URL to the main website for this project.
            ProjectUri = 'https://github.com/UTM-Online/VstsPowerShellModuleManagement'
            # A URL to an icon representing this module.
            # IconUri = ''
            # ReleaseNotes of this module
            # ReleaseNotes = ''
        } # End of PSData hashtable
	}

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}


<#+
	string BuildNumber = Environment.GetEnvironmentVariable("APPVEYOR_BUILD_VERSION") ?? "0.0.1";
#>